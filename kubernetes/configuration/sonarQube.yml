apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: questionarios
type: Opaque
stringData:
  sonarQubeUser: admin
  sonarQubePassword: sonarQubePsw
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pg-admin-pv-volume
  namespace: questionarios
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/kubernetes-data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pg-admin-pv-claim
  namespace: questionarios
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pg-admin
  namespace: questionarios
  labels:
    app.kubernetes.io/name: pg-admin
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: pg-admin
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pg-admin
    spec:
      volumes:
        - name: pg-admin-pv-storage
          persistentVolumeClaim:
            claimName: pg-admin-pv-claim
      containers:
        - name: pg-admin
          image: dpage/pgadmin4
          ports:
            - containerPort: 80
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              value: user@domain.com
            - name: PGADMIN_DEFAULT_PASSWORD
              value: SuperSecret
          volumeMounts:
            - mountPath: "/var/lib/pgadmin"
              name: pg-admin-pv-storage
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: pg-admin
  name: pg-admin
  namespace: questionarios
spec:
  ports:
    - name: http
      port: 80
      targetPort: 80
  selector:
    app.kubernetes.io/name: pg-admin
  type: ClusterIP

